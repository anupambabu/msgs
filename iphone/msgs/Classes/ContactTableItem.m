//
//  ContactTableItem.m
//  msgs
//
//  Created by Lewis Zimmerman on 11-01-05.
//  Copyright 2011 Qorporation. All rights reserved.
//

#import "ContactTableItem.h"

#import <Three20Core/TTCorePreprocessorMacros.h>

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
@implementation ContactTableItem

@synthesize text = _text;

///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)dealloc {
	TT_RELEASE_SAFELY(_text);
	
	[super dealloc];
}


///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark Class public


///////////////////////////////////////////////////////////////////////////////////////////////////
+ (id)itemWithText:(NSString*)text {
	ContactTableItem* item = [[[self alloc] init] autorelease];
	item.text = text;
	return item;
}


///////////////////////////////////////////////////////////////////////////////////////////////////
+ (id)itemWithText:(NSString*)text URL:(NSString*)URL {
	ContactTableItem* item = [[[self alloc] init] autorelease];
	item.text = text;
	item.URL = URL;
	return item;
}


///////////////////////////////////////////////////////////////////////////////////////////////////
+ (id)itemWithText:(NSString*)text URL:(NSString*)URL accessoryURL:(NSString*)accessoryURL {
	ContactTableItem* item = [[[self alloc] init] autorelease];
	item.text = text;
	item.URL = URL;
	item.accessoryURL = accessoryURL;
	return item;
}


///////////////////////////////////////////////////////////////////////////////////////////////////
+ (id)itemWithText:(NSString*)text delegate:(id)delegate selector:(SEL)selector {
	ContactTableItem* item = [[[self alloc] init] autorelease];
	item.text = text;
	item.delegate = delegate;
	item.selector = selector;
	return item;
}


///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
#pragma mark -
#pragma mark NSCoding


///////////////////////////////////////////////////////////////////////////////////////////////////
- (id)initWithCoder:(NSCoder*)decoder {
	if (self = [super initWithCoder:decoder]) {
		self.text = [decoder decodeObjectForKey:@"text"];
	}
	return self;
}


///////////////////////////////////////////////////////////////////////////////////////////////////
- (void)encodeWithCoder:(NSCoder*)encoder {
	[super encodeWithCoder:encoder];
	if (self.text) {
		[encoder encodeObject:self.text forKey:@"text"];
	}
}

@end
